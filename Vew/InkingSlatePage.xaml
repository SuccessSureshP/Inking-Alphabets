<Page x:Class="InkingAlphabets.InkingSlatePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:InkingAlphabets"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:userControls="using:InkingAlphabets.UserControls"
      DataContext="{Binding InkingSlatePageViewModelInstance,
                            Source={StaticResource Locator}}"
      mc:Ignorable="d">
    <RelativePanel>
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <CommandBar Background="{ThemeResource SystemControlBackgroundAccentBrush}" Foreground="White">
                <CommandBar.Content>
                    <Grid Height="48">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="1000"
                                       Style="{StaticResource AppTitleTextBlockStyle}"
                                       Text="{Binding PageTitle}" />
                            <!--<inkTools:InkToolbar x:Name="InkToolbar" TargetInkCanvas="{x:Bind SlateCanvas}"   Margin="10,0,0,0"
                                        PenColor="#5C9100"
                                         PenSize="25,25"
                                         ButtonBackground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                         VerticalAlignment="Top" HorizontalAlignment="Right"
                                         ButtonForeground="White"></inkTools:InkToolbar>-->
                        </StackPanel>
                    </Grid>
                </CommandBar.Content>
                <CommandBar.PrimaryCommands>
                    <AppBarButton x:Name="PenColorAppBarButton"
                                  Margin="1"
                                  Background="{ThemeResource AppBarToggleButtonCheckedForegroundThemeBrush}"
                                  Click="PenColorAppBarButton_Click"
                                  Foreground="{Binding SelectedPenColor,
                                                       Converter={StaticResource ColorToBrushConverter}}"
                                  Icon="Edit"
                                  Label="Pen">
                        <Button.Flyout>
                            <Flyout>
                                <userControls:InkPenSelectorControl x:Name="SlateInkPenSelectorControl"
                                                                    CloseClicked="SlateInkPenSelectorControl_CloseClicked"
                                                                    PenColor="{Binding SelectedPenColorName,
                                                                                       Mode=TwoWay}"
                                                                    PenSize="{Binding PenSize,
                                                                                      Mode=TwoWay}"
                                                                    PropertyChanged="SlateInkPenSelectorControl_PropertyChanged" />
                            </Flyout>
                        </Button.Flyout>
                    </AppBarButton>
                    <AppBarButton x:Name="HighliterAppBarButton"
                                  Margin="1"
                                  Background="{ThemeResource AppBarToggleButtonCheckedForegroundThemeBrush}"
                                  Click="HighliterAppBarButton_Click"
                                  Foreground="{Binding SelectedHighlighterColor,
                                                       Converter={StaticResource ColorToBrushConverter}}"
                                  Icon="Highlight"
                                  Label="Highliter">
                        <Button.Flyout>
                            <Flyout>
                                <userControls:HighlighterPenSelectorControl x:Name="SlateHighliterPenSelectorControl"
                                                                            CloseClicked="SlateHighliterPenSelectorControl_CloseClicked"
                                                                            HighlighterPenColor="{Binding SelectedHighlighterColorName,
                                                                                                          Mode=TwoWay}"
                                                                            HighlighterPenSize="{Binding HighlighterSize,
                                                                                                         Mode=TwoWay}"
                                                                            PropertyChanged="SlateHighliterPenSelectorControl_PropertyChanged" />
                            </Flyout>
                        </Button.Flyout>
                    </AppBarButton>
                    <AppBarToggleButton x:Name="AppbarButtonEraser"
                                        Margin="1"
                                        Checked="AppbarButtonEraser_Checked"
                                        ClickMode="Press"
                                        Foreground="White"
                                        Icon="PostUpdate"
                                        Label="Eraser"
                                        Unchecked="AppbarButtonEraser_Unchecked" />
                    <AppBarButton x:Name="AppbarButtonClear"
                                  Click="AppbarButtonClear_Click"
                                  Foreground="White"
                                  Icon="Clear"
                                  Label="Clear" />
                    <AppBarToggleButton x:Name="AppbarButtonPan"
                                        Checked="AppbarButtonPan_Checked"
                                        ClickMode="Press"
                                        Foreground="White"
                                        Icon="BrowsePhotos"
                                        Label="Pannig"
                                        Unchecked="AppbarButtonPan_Unchecked" />
                    <AppBarToggleButton x:Name="AppbarButtonGrid"
                                        ClickMode="Press"
                                        Foreground="White"
                                        Icon="SelectAll"
                                        Label="Grid" />
                    <AppBarButton x:Name="AppbarButtonOpen"
                                  Click="AppbarButtonOpen_Click"
                                  Foreground="White"
                                  Icon="OpenFile"
                                  Label="Open" />
                    <AppBarButton x:Name="AppbarButtonSave"
                                  Click="AppbarButtonSave_Click"
                                  Foreground="White"
                                  Icon="Save"
                                  Label="Save" />
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                    <AppBarButton x:Name="OpenSecondaryAppbarButton"
                                  Click="AppbarButtonOpen_Click"
                                  Icon="OpenFile"
                                  Label="Open"
                                  Visibility="Collapsed" />
                    <AppBarButton x:Name="SaveSecondaryAppbarButton"
                                  Click="AppbarButtonSave_Click"
                                  Icon="Save"
                                  Label="Save"
                                  Visibility="Collapsed" />
                    <AppBarButton x:Name="ShareAppBarButton"
                                  Click="ShareAppBarButton_Click"
                                  Icon="ReShare"
                                  Label="Share" />
                    <AppBarButton x:Name="SaveAsImageAppBarButton"
                                  Click="SaveAsImageAppBarButton_Click"
                                  Icon="Save"
                                  Label="Save as Image" />
                </CommandBar.SecondaryCommands>
            </CommandBar>
            <Grid Grid.Row="1"
                  Background="Black"
                  BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
                  BorderThickness="1,1,1,1">
                <ScrollViewer x:Name="PenCanvasScrollViewer"
                              HorizontalScrollBarVisibility="Auto"
                              HorizontalScrollMode="Auto"
                              ZoomMode="Enabled">
                    <Grid Width="2000"
                          Height="1000"
                          Background="White"
                          x:Name="InkingGrid">
                        <Grid x:Name="parentGrid">
                            <Image x:Name="bgimage" Stretch="Fill" />
                            <Grid x:Name="GridLinesContainer" Visibility="{Binding IsChecked, ElementName=AppbarButtonGrid, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>

                        <InkCanvas x:Name="SlateCanvas" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!--  VisualState to be triggered when window width is >=720 effective pixels  -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--
                            Widest possible layout moves some elements around to optimize for more available width
                            and keeps SplitView pane always showing inline
                        -->
                        <!--<Setter Target="TitlePanel.Width"
                            Value="700" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--
                            For intermediate window widths as well as most phones on landscape orientation,
                            this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout
                        -->
                        <!--<Setter Target="TitlePanel.Text"
                            Value="Changed" />-->
                        <Setter Target="OpenSecondaryAppbarButton.Visibility" Value="Visible" />
                        <Setter Target="SaveSecondaryAppbarButton.Visibility" Value="Visible" />

                        <Setter Target="AppbarButtonOpen.Visibility" Value="Collapsed" />
                        <Setter Target="AppbarButtonSave.Visibility" Value="Collapsed" />
                        <Setter Target="InkingGrid.Width" Value="1000" />
                        <Setter Target="InkingGrid.Height" Value="500" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitlePanel.Width" Value="50" />
                        <Setter Target="FontSlider.Width" Value="60" />
                        <Setter Target="OpenSecondaryAppbarButton.Visibility" Value="Visible" />
                        <Setter Target="SaveSecondaryAppbarButton.Visibility" Value="Visible" />

                        <Setter Target="InkingGrid.Width" Value="1000" />
                        <Setter Target="InkingGrid.Height" Value="500" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
